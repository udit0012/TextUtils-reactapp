{"version":3,"sources":["components/About.js","components/Alert.js","components/navbar.js","components/textform.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","mode","id","type","Alert","style","height","alert","role","message","Navbar","to","title","onClick","toggleMode","htmlFor","Textform","useState","text","setText","words","setWords","useEffect","wordsarr","split","filter","ele","length","console","log","color","background","value","onChange","event","target","rows","disabled","toUpperCase","showAlert","toLowerCase","vcount","i","a","toFixed","defaultProps","App","setMode","setAlert","setTimeout","document","body","backgroundColor","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a69e184a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1 className={`my-3 mx-1 text-${props.mode}`}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className={`accordion-item bg-${props.mode === \"dark\" ? \"light\" : \"dark\"} border-1 border-${props.mode}`}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className={`accordion-button text-${props.mode} bg-${props.mode === \"dark\" ? \"light\" : \"dark\"}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze Your Text</strong> \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className={`accordion-body text-${props.mode}`}>\r\n                            Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`accordion-item bg-${props.mode === \"dark\" ? \"light\" : \"dark\"} border-1 border-${props.mode}`}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className={`accordion-button text-${props.mode} bg-${props.mode === \"dark\" ? \"light\" : \"dark\"} collapsed`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to Use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className={`accordion-body text-${props.mode}`}>\r\n                            TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`accordion-item bg-${props.mode === \"dark\" ? \"light\" : \"dark\"} border-1 border-${props.mode}`}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className={`accordion-button text-${props.mode} bg-${props.mode === \"dark\" ? \"light\" : \"dark\"} collapsed`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser Compatible</strong> \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className={`accordion-body text-${props.mode}`}>\r\n                        This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, et\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style={{ height: \"50px\" }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.message}</strong>\r\n            </div>}\r\n        </ div>\r\n            )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n// import Themebutton from '../Themebutton';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n            <nav className={`navbar navbar-expand-lg navbar-dark bg-dark`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <div className=\"me-5 d-flex align-items-center\">\r\n                            <h6 className=\"nav-link text-light\">Color Themes</h6>\r\n                            <Themebutton bgcolor = \"#1f0e57\" changeTheme={props.changeTheme}/>\r\n                            <Themebutton bgcolor = \"#470a0e\" changeTheme={props.changeTheme}/>\r\n                            <Themebutton bgcolor = \"#422c07\" changeTheme={props.changeTheme}/>\r\n                            <Themebutton bgcolor = \"#0a4214\" changeTheme={props.changeTheme}/>\r\n                            <Themebutton bgcolor = \"#3d043b\" changeTheme={props.changeTheme}/>\r\n                        </div> */}\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" onClick= {props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className={`form-check-label text-light`} htmlFor=\"flexSwitchCheckDefault\">{props.mode===\"dark\"?\"Dark\":\"Light\"} Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n                )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title:'Set title here'\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\"\");  \r\n    const [words, setWords] = useState(0);\r\n\r\n    const handletoupper = ()=>{\r\n        // console.log(\"uppercase is clicked\" + text);\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Text has been changed to Uppercase\",\"success\");\r\n    }\r\n    const handletolower = ()=>{\r\n        // console.log(\"uppercase is clicked\" + text);\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Text has been changed to Lowercase\",\"success\");\r\n    }\r\n    const handleclear = ()=>{\r\n        // console.log(\"uppercase is clicked\" + text);\r\n        setText(\"\");\r\n        props.showAlert(\"Text has been Cleared\",\"success\");\r\n    }\r\n    const handlecountvowel = ()=>{\r\n        let vcount = 0;\r\n        // console.log(\"uppercase is clicked\" + text);\r\n        for(let i = 0;i<text.length;i++){\r\n            if(text[i]===\"a\" || text[i]===\"e\" || text[i]===\"i\" || text[i]===\"o\" || text[i]===\"u\" || text[i]===\"A\" || text[i]===\"E\" || text[i]===\"I\" || text[i]===\"O\" || text[i]===\"U\"){\r\n                vcount++;\r\n            }\r\n        }\r\n        alert(\"Your text has \" + vcount + \" vowels\");\r\n    }\r\n    const handleonchange = (event)=>{\r\n        // console.log(\"Value Changed\");\r\n        setText(event.target.value);\r\n        \r\n    }\r\n    useEffect(() => {\r\n        let wordsarr = text.split(\" \").filter(ele=>ele.length!==0)\r\n        text===\"\"?setWords(0):setWords(wordsarr.length)\r\n        console.log(\"aur bhai\")\r\n    }, [text,words]);\r\n    return (\r\n        <>\r\n        <div className=\"container mt-4\" style={{color : props.mode===\"dark\"?\"black\":\"white\"}}>\r\n            <h1 className= \"mb-3\">Enter the text to analyze below</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className={`form-control border-1 border-${props.mode}`} style={{background: \"transparent\",color:props.mode===\"dark\"?\"black\":\"white\"}} value={text} onChange = {handleonchange} id=\"exampleFormControlTextarea1\" rows=\"8\">    </textarea>\r\n            </div>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode} mx-1 my-1`} onClick ={handletoupper}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode} mx-1 my-1`} onClick ={handletolower}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode} mx-1 my-1`} onClick ={handleclear}>Clear text</button>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode} mx-1 my-1`} onClick ={handlecountvowel}>Count number of vowels</button>\r\n        </div>\r\n        <div className=\"container mt-3\" style={{color : props.mode===\"dark\"?\"black\":\"white\"}}>\r\n            <h2>Words and Characters Count</h2>\r\n            <p>{text.split(\" \").filter((a)=>{return a.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{(words * 0.008).toFixed(4)} minutes to read above sentence </p>\r\n\r\n            <h2>Text Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/navbar';\nimport Textform from './components/textform';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"dark\");\n  const togglemode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n  // const changeTheme = (bgcolor)=>{\n  //   setMode(\"light\");\n  //   document.body.style.backgroundColor = bgcolor;\n  //   showAlert(\"Theme has been enabled\",\"success\"); \n  // }\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  return (\n    <>\n      <Router>\n        <Navbar title=\"MytextUtils\" mode={mode} toggleMode={togglemode} />\n        <Alert alert={alert} />\n        <div>\n          <Switch>\n            <Route path=\"/about\">\n              <About mode={mode} showAlert={showAlert} />\n            </Route>\n            <Route path=\"/\">\n              <Textform mode={mode} showAlert={showAlert} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}